{"ast":null,"code":"var _jsxFileName = \"/Users/natashawong/Desktop/124-lab-1/lab2/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { filterType } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const filteredData = props.filterType === filterType.hideCompleted ? props.data.filter(item => !item.completed) : props.data;\n  const [todo, setTodo] = useState({});\n  const [checked, setChecked] = useState({});\n\n  function handleChange(index) {\n    return e => {\n      let isChecked = e.target.checked;\n      setChcked(prevState => ({ ...prevState,\n        [e.target.name]: e.target.checked\n      }));\n      props.setData(isChecked, index);\n    };\n  }\n\n  function onEdit(index) {\n    return e => {\n      setTodo(prevState => ({ ...prevState,\n        [e.target.name]: e.target.value\n      }));\n      props.editData(e.target.value, index);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredData.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: i,\n        name: i,\n        disabled: props.mode === \"EDIT\",\n        checked: checked.i,\n        onChange: handleChange(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), props.mode === \"EDIT\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        id: i,\n        name: i,\n        value: todo.i,\n        onChange: onEdit(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this) : props.mode === \"ADD\" && i === filteredData.length - 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n        id: i,\n        name: i,\n        value: todo.i,\n        onChange: onEdit(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: i,\n        name: i,\n        value: item.todo,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"g+NEQ5uHy6J/lQ9+H3TyD5uS9qY=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/natashawong/Desktop/124-lab-1/lab2/src/List.js"],"names":["React","useState","filterType","List","props","filteredData","hideCompleted","data","filter","item","completed","todo","setTodo","checked","setChecked","handleChange","index","e","isChecked","target","setChcked","prevState","name","setData","onEdit","value","editData","map","i","mode","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {filterType} from './Constants';\n\nfunction List(props) {\n    const filteredData = props.filterType === filterType.hideCompleted ? props.data.filter(item => !item.completed) : props.data\n    const [todo, setTodo] = useState({});\n    const [checked, setChecked] = useState({});\n    \n    function handleChange(index) {\n        return (e) => {\n            let isChecked = e.target.checked;\n            setChcked( prevState => ({...prevState, [e.target.name] : e.target.checked}))\n            props.setData(isChecked, index);\n        }\n    }\n\n    function onEdit(index) {\n        return (e) => {\n            setTodo( prevState => ({...prevState, [e.target.name] : e.target.value}))\n            props.editData(e.target.value, index);\n        }\n    }\n\n    return(\n        <div>\n            {filteredData.map((item, i) => (\n                <div className = \"input\" key={i}>\n                <input type=\"checkbox\" id={i} name={i} disabled={props.mode === \"EDIT\"} checked={checked.i} onChange={handleChange(i)}/>\n                    {props.mode === \"EDIT\" ? \n                        <input id={i} name={i} value={todo.i} onChange={onEdit(i)}/> :\n                    (props.mode === \"ADD\" && i === filteredData.length-1) ?\n                        <input id={i} name={i} value={todo.i} onChange={onEdit(i)}/> :\n                        <input id={i} name={i} value={item.todo} readOnly/>\n                    }\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}