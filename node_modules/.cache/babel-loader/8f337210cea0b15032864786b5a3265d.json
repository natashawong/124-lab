{"ast":null,"code":"var _jsxFileName = \"/Users/natashawong/Desktop/124-lab-1/lab2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from './List';\nimport './styles.css';\nimport { filterType, modeType } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    id: 1,\n    todo: \"Call mom\",\n    completed: false\n  }, {\n    id: 2,\n    todo: \"Eat lunch\",\n    completed: false\n  }];\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setDeleteAllowed] = useState(false);\n\n  function plusClicked() {\n    let newId = data.length;\n    let newData = data;\n    newData.push({\n      id: newId,\n      todo: \"\",\n      completed: false\n    });\n    setData(newData);\n    setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n\n    if (data.length > 1) {\n      data[data.length - 1].todo === \"\" && newData.pop();\n    }\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((items, i) => {\n      if (items.completed) {\n        setDeleteAllowed(true);\n      }\n    });\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    const newData = data.filter(item => !item.completed);\n    setData(newData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: mode === modeType.add || mode === modeType.edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button doneButton\",\n        onClick: doneClicked,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button editButton\",\n          onClick: editClicked,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button plusButton\",\n          onClick: plusClicked,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"underline\",\n          children: \"To-do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: data,\n      filterType: filter,\n      setData: (isComplete, index) => {\n        let newData = data;\n        newData[index].completed = isComplete;\n        setData(newData);\n      },\n      editData: (newTodo, index) => {\n        let newData = data;\n        newData[index].todo = newTodo;\n        setData(newData);\n      },\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: mode === modeType.edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [deleteAllowed && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button deleteSelected\",\n          onClick: deleteSelected,\n          children: \"Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }, this), filter === filterType.hideCompleted && deleteAllowed ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.showAll),\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.hideCompleted),\n          children: \"Hide Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button deleteCompleted\",\n          onClick: deleteSelected,\n          children: \"Delete Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"eBRJBuS7KQ0CM66wbUMcrjhXOAE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/natashawong/Desktop/124-lab-1/lab2/src/App.js"],"names":["React","useState","List","filterType","modeType","App","initialData","id","todo","completed","data","setData","filter","setFilterType","showAll","mode","setMode","base","atLeastOneSelected","setDeleteAllowed","plusClicked","newId","length","newData","push","add","doneClicked","pop","editClicked","map","items","i","edit","deleteSelected","item","isComplete","index","newTodo","deleteAllowed","hideCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,cAAP;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,aAAnC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADkB,EAMlB;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANkB,CAApB;AAaA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACK,WAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,aAAT,IAA0BZ,QAAQ,CAACE,UAAU,CAACW,OAAZ,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACG,QAAQ,CAACa,IAAV,CAAhC;AACA,QAAM,CAACC,kBAAD,EAAqBC,gBAArB,IAA0ClB,QAAQ,CAAC,KAAD,CAAxD;;AAEA,WAASmB,WAAT,GAAuB;AACnB,QAAIC,KAAK,GAAGX,IAAI,CAACY,MAAjB;AACA,QAAIC,OAAO,GAAGb,IAAd;AAEAa,IAAAA,OAAO,CAACC,IAAR,CAAa;AACTjB,MAAAA,EAAE,EAAEc,KADK;AAETb,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAMAE,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACZ,QAAQ,CAACqB,GAAV,CAAP;AACH;;AAED,WAASC,WAAT,GAAuB;AACrB,QAAIH,OAAO,GAAGb,IAAd;;AACA,QAAIA,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;AAACZ,MAAAA,IAAI,CAACA,IAAI,CAACY,MAAL,GAAY,CAAb,CAAJ,CAAoBd,IAApB,KAA6B,EAA7B,IAAmCe,OAAO,CAACI,GAAR,EAAnC;AAAiD;;AAEvEhB,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACZ,QAAQ,CAACa,IAAV,CAAP;AACD;;AAED,WAASW,WAAT,GAAuB;AACrBlB,IAAAA,IAAI,CAACmB,GAAL,CAAS,CAACC,KAAD,EAAQC,CAAR,KAAc;AACrB,UAAID,KAAK,CAACrB,SAAV,EAAqB;AAACU,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAuB;AAC9C,KAFD;AAGAH,IAAAA,OAAO,CAACZ,QAAQ,CAAC4B,IAAV,CAAP;AACD;;AAED,WAASC,cAAT,GAA0B;AACxB,UAAMV,OAAO,GAAGb,IAAI,CAACE,MAAL,CAAasB,IAAD,IAAU,CAACA,IAAI,CAACzB,SAA5B,CAAhB;AACAE,IAAAA,OAAO,CAACY,OAAD,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACMR,IAAI,KAAKX,QAAQ,CAACqB,GAAlB,IAAyBV,IAAI,KAAKX,QAAQ,CAAC4B,IAA5C,gBACM;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEN,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,gBAIK;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAEE,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAER,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbF,eAmBE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEV,IADR;AAEE,MAAA,UAAU,EAAEE,MAFd;AAGE,MAAA,OAAO,EAAE,CAACuB,UAAD,EAAaC,KAAb,KAAuB;AAC9B,YAAIb,OAAO,GAAGb,IAAd;AACAa,QAAAA,OAAO,CAACa,KAAD,CAAP,CAAe3B,SAAf,GAA2B0B,UAA3B;AACAxB,QAAAA,OAAO,CAACY,OAAD,CAAP;AACD,OAPH;AAQE,MAAA,QAAQ,EAAE,CAACc,OAAD,EAAUD,KAAV,KAAoB;AAC5B,YAAIb,OAAO,GAAGb,IAAd;AACAa,QAAAA,OAAO,CAACa,KAAD,CAAP,CAAe5B,IAAf,GAAsB6B,OAAtB;AACA1B,QAAAA,OAAO,CAACY,OAAD,CAAP;AACD,OAZH;AAaE,MAAA,IAAI,EAAER;AAbR;AAAA;AAAA;AAAA;AAAA,YAnBF,eAmCE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGA,IAAI,KAAKX,QAAQ,CAAC4B,IAAlB,iBACC;AAAA,mBACGM,aAAa,iBAAI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAEL,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB,EAEGrB,MAAM,KAAKT,UAAU,CAACoC,aAAtB,IAAuCD,aAAvC,gBACC;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,MAAMzB,aAAa,CAACV,UAAU,CAACW,OAAZ,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAEC;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACV,UAAU,CAACoC,aAAZ,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAME;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAEN,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA,kBADF;AAiDD;;GAtGQ5B,G;;KAAAA,G;AAwGT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport List from './List';\n\nimport './styles.css';\nimport {filterType, modeType} from './Constants';\n\nfunction App() {\n  const initialData = [\n    {\n      id: 1,\n      todo: \"Call mom\",\n      completed: false,\n    },\n    {\n      id: 2,\n      todo: \"Eat lunch\",\n      completed: false,\n    }\n  ]\n\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setDeleteAllowed ] = useState(false);\n\n  function plusClicked() {\n      let newId = data.length;\n      let newData = data;\n\n      newData.push({\n          id: newId,\n          todo: \"\",\n          completed: false,\n      })\n\n      setData(newData);\n      setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n    if (data.length > 1) {data[data.length-1].todo === \"\" && newData.pop()}\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((items, i) => {\n      if (items.completed) {setDeleteAllowed(true)}\n    })\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    const newData = data.filter((item) => !item.completed)\n    setData(newData);\n  }\n\n  return (\n    <>\n      <div className=\"buttons\">\n          {(mode === modeType.add || mode === modeType.edit) ? \n                (<button className=\"button doneButton\" onClick={doneClicked}>Done</button>)\n              :\n              (\n                <>\n                <button className=\"button editButton\" onClick={editClicked}>Edit</button>\n                <button className=\"button plusButton\" onClick={plusClicked}>+</button> \n                </>\n              )\n          }\n      </div>\n      <div className=\"body-container\">\n          <div className=\"title\">\n              <h1 className=\"underline\">To-do list</h1>\n          </div>\n      </div>\n\n      <List\n        data={data} \n        filterType={filter}\n        setData={(isComplete, index) => {\n          let newData = data;\n          newData[index].completed = isComplete;\n          setData(newData);\n        }}\n        editData={(newTodo, index) => {\n          let newData = data;\n          newData[index].todo = newTodo;\n          setData(newData);\n        }}\n        mode={mode}\n      />\n\n      <div className=\"footer\">\n        {mode === modeType.edit && \n          <>\n            {deleteAllowed && <button className=\"button deleteSelected\" onClick={deleteSelected}>Delete Selected</button>}\n            {filter === filterType.hideCompleted && deleteAllowed ? \n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.showAll)}>Show All</button> :\n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.hideCompleted)}>Hide Completed</button>\n            }\n            <button className=\"button deleteCompleted\" onClick={deleteSelected}>Delete Completed</button> \n          </>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}