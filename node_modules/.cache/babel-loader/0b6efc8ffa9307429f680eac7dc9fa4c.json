{"ast":null,"code":"var _jsxFileName = \"/Users/natashawong/Desktop/124-lab-1/lab2/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const searchInput = useRef(null);\n  const [todo, setTodos] = useState('');\n\n  const completeTodo = id => {\n    let updatedTodos = props.data.map(item => {\n      if (item.id === id) {\n        item.isComplete = true;\n      }\n\n      return item;\n    });\n    setTodos(updatedTodos);\n  }; // useEffect(()=>{\n  //     searchInput.current.focus();\n  //  },[])\n\n\n  const filteredData = props.filterType === 'showCompleted' ? props.data : props.data.filter(item => !item.completed);\n\n  function handleChange(e, index) {\n    console.log(\"index\" + index);\n    let isChecked = e.target.checked;\n    props.setData(isChecked, index);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredData.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      id: i,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: i => handleChange(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), item.focus ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: searchInput,\n        value: item.todo,\n        onChange: () => completeTodo(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        value: item.todo,\n        onChange: () => completeTodo(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"20DfhrFVCis/rTlFBwbzDDfdmoo=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/natashawong/Desktop/124-lab-1/lab2/src/List.js"],"names":["React","useEffect","useRef","useState","List","props","searchInput","todo","setTodos","completeTodo","id","updatedTodos","data","map","item","isComplete","filteredData","filterType","filter","completed","handleChange","e","index","console","log","isChecked","target","checked","setData","i","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAMC,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AAEA,QAAM,CAAEK,IAAF,EAAQC,QAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMM,YAAY,GAAIC,EAAD,IAAQ;AACzB,QAAIC,YAAY,GAAGN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACrC,UAAGA,IAAI,CAACJ,EAAL,KAAYA,EAAf,EAAkB;AACdI,QAAAA,IAAI,CAACC,UAAL,GAAkB,IAAlB;AACF;;AACH,aAAOD,IAAP;AACJ,KALmB,CAAnB;AAMCN,IAAAA,QAAQ,CAACG,YAAD,CAAR;AACH,GARF,CALiB,CAejB;AACA;AACA;;;AAEA,QAAMK,YAAY,GAAGX,KAAK,CAACY,UAAN,KAAqB,eAArB,GAAuCZ,KAAK,CAACO,IAA7C,GAAoDP,KAAK,CAACO,IAAN,CAAWM,MAAX,CAAkBJ,IAAI,IAAI,CAACA,IAAI,CAACK,SAAhC,CAAzE;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,KAAzB,EAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,KAAtB;AACA,QAAIG,SAAS,GAAGJ,CAAC,CAACK,MAAF,CAASC,OAAzB;AACAtB,IAAAA,KAAK,CAACuB,OAAN,CAAcH,SAAd,EAAyBH,KAAzB;AACH;;AAED,sBACI;AAAA,cACKN,YAAY,CAACH,GAAb,CAAiB,CAACC,IAAD,EAAOe,CAAP,kBACd;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAyB,MAAA,EAAE,EAAEA,CAA7B;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGA,CAAD,IAAOT,YAAY,CAACS,CAAD;AAApD;AAAA;AAAA;AAAA;AAAA,cADA,EAEKf,IAAI,CAACgB,KAAL,gBACG;AAAO,QAAA,GAAG,EAAExB,WAAZ;AAAyB,QAAA,KAAK,EAAEQ,IAAI,CAACP,IAArC;AAAmD,QAAA,QAAQ,EAAE,MAAME,YAAY,CAACoB,CAAD;AAA/E,SAAgDA,CAAhD;AAAA;AAAA;AAAA;AAAA,cADH,gBAEG;AAAO,QAAA,KAAK,EAAEf,IAAI,CAACP,IAAnB;AAAiC,QAAA,QAAQ,EAAE,MAAME,YAAY,CAACoB,CAAD;AAA7D,SAA8BA,CAA9B;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxCQzB,I;;KAAAA,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction List(props) {\n    const searchInput = useRef(null);\n\n    const [ todo, setTodos ] = useState('');\n\n    const completeTodo = (id) => {\n        let updatedTodos = props.data.map(item => {\n             if(item.id === id){\n                 item.isComplete = true\n              }\n            return item\n       }) \n         setTodos(updatedTodos)\n     };\n\n    // useEffect(()=>{\n    //     searchInput.current.focus();\n    //  },[])\n\n    const filteredData = props.filterType === 'showCompleted' ? props.data : props.data.filter(item => !item.completed)\n\n    function handleChange(e, index) {\n        console.log(\"index\" + index);\n        let isChecked = e.target.checked;\n        props.setData(isChecked, index);\n    }\n\n    return(\n        <div>\n            {filteredData.map((item, i) => (\n                <div className = \"input\" id={i}>\n                <input type=\"checkbox\" onChange={(i) => handleChange(i)}/>\n                    {item.focus ?\n                        <input ref={searchInput} value={item.todo} key={i} onChange={() => completeTodo(i)}/> :\n                        <input value={item.todo} key={i} onChange={() => completeTodo(i)}/>\n                    }\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}