{"ast":null,"code":"var _jsxFileName = \"/Users/natashawong/Desktop/124-lab-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from './List';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { generateUniqueId } from \"react-firebase-hooks/firestore\";\nimport { map } from '@firebase/util';\nimport './styles.css';\nimport { filterType, modeType } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const collection = db.collection('natasha-bettina-124');\n  const [value, loading, error] = useCollection(collection);\n  const initialData = value;\n  console.log(initialData);\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setAtLeastOneSelected] = useState(false);\n  const [latestId, setLatestId] = useState(3);\n\n  function plusClicked() {\n    let newData = data;\n    newData.push({\n      id: latestId,\n      todo: \"\",\n      completed: false\n    });\n    let newId = latestId + 1;\n    setLatestId(newId);\n    setData(newData);\n    setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n\n    if (data.length > 1) {\n      data[data.length - 1].todo === \"\" && newData.pop();\n    }\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((item, i) => {\n      if (item.completed) {\n        setAtLeastOneSelected(true);\n      }\n    });\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    let newData = data.filter(item => !item.completed);\n    newData.map((item, i) => {\n      item.completed = false;\n    });\n    setData(newData);\n    console.log(newData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: mode === modeType.add || mode === modeType.edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button doneButton\",\n        onClick: doneClicked,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button editButton\",\n          onClick: editClicked,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button plusButton\",\n          onClick: plusClicked,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"underline\",\n          children: \"To-do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: data,\n      filterType: filter,\n      setData: (isComplete, index) => {\n        let newData = data;\n        newData[index].completed = isComplete;\n        setData(newData);\n      },\n      editData: (newTodo, index) => {\n        let newData = data;\n        newData[index].todo = newTodo;\n        setData(newData);\n      },\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: mode === modeType.edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [filter === filterType.hideCompleted && atLeastOneSelected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.showAll),\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.hideCompleted),\n          children: \"Hide Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button deleteCompleted\",\n          onClick: deleteSelected,\n          children: \"Delete Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"1sYyPseya3TFHe4h765PzrKruZY=\", false, function () {\n  return [useCollection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/natashawong/Desktop/124-lab-1/src/App.js"],"names":["React","useState","List","firebase","useCollection","generateUniqueId","map","filterType","modeType","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","collection","value","loading","error","initialData","console","log","data","setData","filter","setFilterType","showAll","mode","setMode","base","atLeastOneSelected","setAtLeastOneSelected","latestId","setLatestId","plusClicked","newData","push","id","todo","completed","newId","add","doneClicked","length","pop","editClicked","item","i","edit","deleteSelected","isComplete","index","newTodo","hideCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,cAAP;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,aAAnC;;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,SAAS,EAAE,qBAHU;AAIrBC,EAAAA,aAAa,EAAE,iCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AAQAZ,QAAQ,CAACa,aAAT,CAAuBP,cAAvB;AACA,MAAMQ,EAAE,GAAGd,QAAQ,CAACe,SAAT,EAAX;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,UAAU,GAAGH,EAAE,CAACG,UAAH,CAAc,qBAAd,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,IAA0BnB,aAAa,CAACgB,UAAD,CAA7C;AACA,QAAMI,WAAW,GAAGH,KAApB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAACuB,WAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,aAAT,IAA0B7B,QAAQ,CAACM,UAAU,CAACwB,OAAZ,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAACO,QAAQ,CAAC0B,IAAV,CAAhC;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA+CnC,QAAQ,CAAC,KAAD,CAA7D;AACA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASsC,WAAT,GAAuB;AACnB,QAAIC,OAAO,GAAGb,IAAd;AAEAa,IAAAA,OAAO,CAACC,IAAR,CAAa;AACTC,MAAAA,EAAE,EAAEL,QADK;AAETM,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKA,QAAIC,KAAK,GAAGR,QAAQ,GAAG,CAAvB;AACAC,IAAAA,WAAW,CAACO,KAAD,CAAX;AAEAjB,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACzB,QAAQ,CAACsC,GAAV,CAAP;AACH;;AAED,WAASC,WAAT,GAAuB;AACrB,QAAIP,OAAO,GAAGb,IAAd;;AACA,QAAIA,IAAI,CAACqB,MAAL,GAAc,CAAlB,EAAqB;AAACrB,MAAAA,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBL,IAApB,KAA6B,EAA7B,IAAmCH,OAAO,CAACS,GAAR,EAAnC;AAAiD;;AAEvErB,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACzB,QAAQ,CAAC0B,IAAV,CAAP;AACD;;AAED,WAASgB,WAAT,GAAuB;AACrBvB,IAAAA,IAAI,CAACrB,GAAL,CAAS,CAAC6C,IAAD,EAAOC,CAAP,KAAa;AACpB,UAAID,IAAI,CAACP,SAAT,EAAoB;AAACR,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA4B;AAClD,KAFD;AAGAH,IAAAA,OAAO,CAACzB,QAAQ,CAAC6C,IAAV,CAAP;AACD;;AAED,WAASC,cAAT,GAA0B;AACxB,QAAId,OAAO,GAAGb,IAAI,CAACE,MAAL,CAAasB,IAAD,IAAU,CAACA,IAAI,CAACP,SAA5B,CAAd;AACAJ,IAAAA,OAAO,CAAClC,GAAR,CAAY,CAAC6C,IAAD,EAAOC,CAAP,KAAa;AACvBD,MAAAA,IAAI,CAACP,SAAL,GAAiB,KAAjB;AACD,KAFD;AAGAhB,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACMR,IAAI,KAAKxB,QAAQ,CAACsC,GAAlB,IAAyBd,IAAI,KAAKxB,QAAQ,CAAC6C,IAA5C,gBACM;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEN,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,gBAIK;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAEG,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAEX,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbF,eAmBE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEZ,IADR;AAEE,MAAA,UAAU,EAAEE,MAFd;AAGE,MAAA,OAAO,EAAE,CAAC0B,UAAD,EAAaC,KAAb,KAAuB;AAC9B,YAAIhB,OAAO,GAAGb,IAAd;AACAa,QAAAA,OAAO,CAACgB,KAAD,CAAP,CAAeZ,SAAf,GAA2BW,UAA3B;AACA3B,QAAAA,OAAO,CAACY,OAAD,CAAP;AACD,OAPH;AAQE,MAAA,QAAQ,EAAE,CAACiB,OAAD,EAAUD,KAAV,KAAoB;AAC5B,YAAIhB,OAAO,GAAGb,IAAd;AACAa,QAAAA,OAAO,CAACgB,KAAD,CAAP,CAAeb,IAAf,GAAsBc,OAAtB;AACA7B,QAAAA,OAAO,CAACY,OAAD,CAAP;AACD,OAZH;AAaE,MAAA,IAAI,EAAER;AAbR;AAAA;AAAA;AAAA;AAAA,YAnBF,eAmCE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGA,IAAI,KAAKxB,QAAQ,CAAC6C,IAAlB,iBACC;AAAA,mBACGxB,MAAM,KAAKtB,UAAU,CAACmD,aAAtB,IAAuCvB,kBAAvC,gBACC;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,MAAML,aAAa,CAACvB,UAAU,CAACwB,OAAZ,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAEC;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACvB,UAAU,CAACmD,aAAZ,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKE;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAEJ,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA,kBADF;AAgDD;;GApGQnC,G;UAGyBf,a;;;KAHzBe,G;AAsGT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport List from './List';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { generateUniqueId } from \"react-firebase-hooks/firestore\";\nimport { map } from '@firebase/util';\n\nimport './styles.css';\nimport {filterType, modeType} from './Constants';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n  const collection = db.collection('natasha-bettina-124');\n  const [value, loading, error] = useCollection(collection);\n  const initialData = value;\n  console.log(initialData);\n\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setAtLeastOneSelected ] = useState(false);\n  const [latestId, setLatestId] = useState(3);\n\n  function plusClicked() {\n      let newData = data;\n\n      newData.push({\n          id: latestId,\n          todo: \"\",\n          completed: false,\n      })\n      let newId = latestId + 1;\n      setLatestId(newId);\n\n      setData(newData);\n      setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n    if (data.length > 1) {data[data.length-1].todo === \"\" && newData.pop()}\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((item, i) => {\n      if (item.completed) {setAtLeastOneSelected(true)}\n    })\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    let newData = data.filter((item) => !item.completed)\n    newData.map((item, i) => {\n      item.completed = false;\n    })\n    setData(newData);\n    console.log(newData);\n  }\n\n  return (\n    <>\n      <div className=\"buttons\">\n          {(mode === modeType.add || mode === modeType.edit) ? \n                (<button className=\"button doneButton\" onClick={doneClicked}>Done</button>)\n              :\n              (\n                <>\n                <button className=\"button editButton\" onClick={editClicked}>Edit</button>\n                <button className=\"button plusButton\" onClick={plusClicked}>+</button> \n                </>\n              )\n          }\n      </div>\n      <div className=\"body-container\">\n          <div className=\"title\">\n              <h1 className=\"underline\">To-do list</h1>\n          </div>\n      </div>\n\n      <List\n        data={data} \n        filterType={filter}\n        setData={(isComplete, index) => {\n          let newData = data;\n          newData[index].completed = isComplete;\n          setData(newData);\n        }}\n        editData={(newTodo, index) => {\n          let newData = data;\n          newData[index].todo = newTodo;\n          setData(newData);\n        }}\n        mode={mode}\n      />\n\n      <div className=\"footer\">\n        {mode === modeType.edit && \n          <>\n            {filter === filterType.hideCompleted && atLeastOneSelected ? \n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.showAll)}>Show All</button> :\n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.hideCompleted)}>Hide Completed</button>\n            }\n            <button className=\"button deleteCompleted\" onClick={deleteSelected}>Delete Completed</button> \n          </>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}