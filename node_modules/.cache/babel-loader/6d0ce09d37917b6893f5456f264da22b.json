{"ast":null,"code":"var _jsxFileName = \"/Users/natashawong/Desktop/124-lab-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from './List';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { map } from '@firebase/util';\nimport './styles.css';\nimport { filterType, modeType } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATi5uqr6dkf4iTvqfPHndGwtHXz0O6O-s\",\n  authDomain: \"lab-90286.firebaseapp.com\",\n  databaseURL: \"https://lab-90286-default-rtdb.firebaseio.com\",\n  projectId: \"lab-90286\",\n  storageBucket: \"lab-90286.appspot.com\",\n  messagingSenderId: \"782831139249\",\n  appId: \"1:782831139249:web:2d846e81abb155eeece590\",\n  measurementId: \"G-YTZ7W2BRD9\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const collection = db.collection('natasha-bettina-124');\n  console.log(collection);\n  const [value, loading, error] = useCollection(collection);\n  const initialData = value ? value : [{}];\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setAtLeastOneSelected] = useState(false);\n\n  function addTodo() {\n    // Adds an empty Todo\n    const newId = generateUniqueID();\n    console.log(newId);\n    console.log(\"coll\", collection.doc(newId));\n    collection.doc(newId).set({\n      id: newId,\n      todo: \"\",\n      completed: false\n    });\n    console.log(value);\n  }\n\n  function removeTodo(id) {\n    collection.doc(id).delete();\n  }\n\n  function editTodo(todoObj) {\n    // Edits an existing Todo\n    // todoObj is {id:..., todo:..., completed:..}\n    collection.doc(todoObj.id).update(todoObj);\n  }\n\n  function plusClicked() {\n    // let newData = data;\n    // newData.push({\n    //     id: latestId,\n    //     todo: \"\",\n    //     completed: false,\n    // })\n    // let newId = latestId + 1;\n    // setLatestId(newId);\n    // setData(newData);\n    addTodo();\n    setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n\n    if (data.length > 1) {\n      data[data.length - 1].todo === \"\" && newData.pop();\n    }\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((item, i) => {\n      if (item.completed) {\n        setAtLeastOneSelected(true);\n      }\n    });\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    let newData = data.filter(item => !item.completed);\n    newData.map((item, i) => {\n      item.completed = false;\n    });\n    setData(newData);\n    console.log(newData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: mode === modeType.add || mode === modeType.edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button doneButton\",\n        onClick: doneClicked,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button editButton\",\n          onClick: editClicked,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button plusButton\",\n          onClick: plusClicked,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"underline\",\n          children: \"To-do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: data,\n      filterType: filter,\n      setData: (isComplete, index) => {\n        let newData = data;\n        newData[index].completed = isComplete;\n        setData(newData);\n      },\n      editData: (newTodo, index) => {\n        let newData = data;\n        newData[index].todo = newTodo;\n        setData(newData);\n      },\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: mode === modeType.edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [filter === filterType.hideCompleted && atLeastOneSelected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.showAll),\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button showCompleted\",\n          onClick: () => setFilterType(filterType.hideCompleted),\n          children: \"Hide Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button deleteCompleted\",\n          onClick: deleteSelected,\n          children: \"Delete Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"GS8DY7y+CZxP8zTX50HllA+72SY=\", false, function () {\n  return [useCollection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/natashawong/Desktop/124-lab-1/src/App.js"],"names":["React","useState","List","firebase","useCollection","generateUniqueID","map","filterType","modeType","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","db","firestore","App","collection","console","log","value","loading","error","initialData","data","setData","filter","setFilterType","showAll","mode","setMode","base","atLeastOneSelected","setAtLeastOneSelected","addTodo","newId","doc","set","id","todo","completed","removeTodo","delete","editTodo","todoObj","update","plusClicked","add","doneClicked","newData","length","pop","editClicked","item","i","edit","deleteSelected","isComplete","index","newTodo","hideCompleted"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport List from './List';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { map } from '@firebase/util';\n\nimport './styles.css';\nimport {filterType, modeType} from './Constants';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATi5uqr6dkf4iTvqfPHndGwtHXz0O6O-s\",\n  authDomain: \"lab-90286.firebaseapp.com\",\n  databaseURL: \"https://lab-90286-default-rtdb.firebaseio.com\",\n  projectId: \"lab-90286\",\n  storageBucket: \"lab-90286.appspot.com\",\n  messagingSenderId: \"782831139249\",\n  appId: \"1:782831139249:web:2d846e81abb155eeece590\",\n  measurementId: \"G-YTZ7W2BRD9\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  const collection = db.collection('natasha-bettina-124');\n  console.log(collection);\n  const [value, loading, error] = useCollection(collection);\n  const initialData = value ? value : [{}];\n\n  const [data, setData] = useState(initialData);\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setAtLeastOneSelected ] = useState(false);\n\n  function addTodo() {\n    // Adds an empty Todo\n    const newId = generateUniqueID();\n    console.log(newId);\n    console.log(\"coll\", collection.doc(newId));\n    collection.doc(newId).set({ id: newId, todo: \"\", completed: false});\n    console.log(value);\n  }\n\n  function removeTodo(id) {\n    collection.doc(id).delete();\n  }\n\n  function editTodo(todoObj) {\n    // Edits an existing Todo\n    // todoObj is {id:..., todo:..., completed:..}\n    collection.doc(todoObj.id).update(todoObj);\n  }\n\n  function plusClicked() {\n      // let newData = data;\n\n      // newData.push({\n      //     id: latestId,\n      //     todo: \"\",\n      //     completed: false,\n      // })\n      // let newId = latestId + 1;\n      // setLatestId(newId);\n\n      // setData(newData);\n      addTodo();\n      setMode(modeType.add);\n  }\n\n  function doneClicked() {\n    let newData = data;\n    if (data.length > 1) {data[data.length-1].todo === \"\" && newData.pop()}\n\n    setData(newData);\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    data.map((item, i) => {\n      if (item.completed) {setAtLeastOneSelected(true)}\n    })\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected() {\n    let newData = data.filter((item) => !item.completed)\n    newData.map((item, i) => {\n      item.completed = false;\n    })\n    setData(newData);\n    console.log(newData);\n  }\n\n  return (\n    <>\n      <div className=\"buttons\">\n          {(mode === modeType.add || mode === modeType.edit) ? \n                (<button className=\"button doneButton\" onClick={doneClicked}>Done</button>)\n              :\n              (\n                <>\n                <button className=\"button editButton\" onClick={editClicked}>Edit</button>\n                <button className=\"button plusButton\" onClick={plusClicked}>+</button> \n                </>\n              )\n          }\n      </div>\n      <div className=\"body-container\">\n          <div className=\"title\">\n              <h1 className=\"underline\">To-do list</h1>\n          </div>\n      </div>\n\n      <List\n        data={data} \n        filterType={filter}\n        setData={(isComplete, index) => {\n          let newData = data;\n          newData[index].completed = isComplete;\n          setData(newData);\n        }}\n        editData={(newTodo, index) => {\n          let newData = data;\n          newData[index].todo = newTodo;\n          setData(newData);\n        }}\n        mode={mode}\n      />\n\n      <div className=\"footer\">\n        {mode === modeType.edit && \n          <>\n            {filter === filterType.hideCompleted && atLeastOneSelected ? \n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.showAll)}>Show All</button> :\n              <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.hideCompleted)}>Hide Completed</button>\n            }\n            <button className=\"button deleteCompleted\" onClick={deleteSelected}>Delete Completed</button> \n          </>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}