{"version":3,"sources":["Constants.js","List.js","components/TabTitle.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["filterType","modeType","List","props","filterDataByList","data","filter","item","list","currList","filteredData","completed","useState","setTodo","setChecked","setPriorityLevel","onEdit","index","e","prevState","target","name","value","onEditData","handlePriorityChange","onChangePriority","map","i","className","type","id","disabled","mode","checked","onChange","isChecked","onSetData","class","lastId","todo","readOnly","style","outline","aria-label","selected","priority","length","onShowAll","onClick","toDelete","onRemoveTodo","TabTitle","title","setTabTitle","selectedTab","onSelectTab","key","onEditTabTitle","Tabs","tabs","push","uniqueTabs","Set","tab","tabTitle","currTab","onNewTab","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","collection","query","setQuery","todoListData","setTodoListData","setLastId","setFilterType","setMode","useCollection","setCurrList","removeTodo","doc","delete","useEffect","docs","loading","sortType","sortOrder","sortQuery","orderBy","newId","generateUniqueID","currDate","Timestamp","now","set","creationdate","slice","selectedList","todoObj","update","editTabTitle","isComplete","isCompleted","setCompleted","newTodo","editTodo","priorityLevel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa0da21c.chunk.js","sourcesContent":["export const filterType = {\n    showAll: \"SHOW_ALL\",\n    hideCompleted: \"HIDE_COMPLETED\",\n}\n\nexport const modeType = {\n    add: \"ADD\",\n    edit: \"EDIT\",\n    base: \"BASE\",\n}\n\nexport const priorityType = {\n    high: 3,\n    med: 2,\n    low: 1,\n}","import React, { useState } from 'react';\nimport {filterType} from './Constants';\n\nexport default function List(props) {\n    const filterDataByList = props.data.filter(item => item.list === props.currList);\n    const filteredData = props.filterType === filterType.hideCompleted ? filterDataByList.filter(item => !item.completed) : filterDataByList\n\n    const [todo, setTodo] = useState({});\n    const [checked, setChecked] = useState({});\n    const [priorityLevel, setPriorityLevel] = useState({});\n    \n    function handleChange(index) {\n        return (e) => {\n            let isChecked = e.target.checked;\n            setChecked( prevState => ({...prevState, [e.target.name] : e.target.checked}))\n            props.onSetData(isChecked, index);\n        }\n    }\n\n    function onEdit(index) {\n        return (e) => {\n            setTodo( prevState => ({...prevState, [e.target.name] : e.target.value}))\n            props.onEditData(e.target.value, index);\n        }\n    }\n\n    function handlePriorityChange(index) {\n        return (e) => {\n            setPriorityLevel( prevState => ({...prevState, [e.target.name] : e.target.value}))\n            props.onChangePriority(e.target.value, index);\n        }\n    }\n\n    function deleteAllCompleted() {\n        const toDelete = filteredData.filter(todo => todo.completed);\n        for (let i = 0; i < toDelete.length; i++) {\n            props.onRemoveTodo(toDelete[i].id);\n        }\n    }\n\n    function deleteList() {\n        for (let i = 0; i < filteredData.length; i++) {\n            props.onRemoveTodo(filteredData[i].id);\n        }\n    }\n\n    return(\n        <div>\n            {filteredData.map((item, i) => (\n                <div className=\"container\">\n                    <div key={i}>\n                        <div className= \"list\">\n                        <div className=\"checkboxAndInputContainer\">\n                            {/* checkbox */}\n                            <input type=\"checkbox\" id={item.id} name={i} disabled={props.mode === \"EDIT\"} checked={item.completed} onChange={handleChange(item.id)} class='regular-checkbox'/>\n\n                            {/* text input/todo itself */}\n                            {props.mode === \"EDIT\" ? \n                                <input type='text' id={item.id} name={i} value={item.todo} onChange={onEdit(item.id)} className=\"todoTextInput\"/> :\n                            (props.mode === \"ADD\" && item.id === props.lastId) ?\n                                <input type='text' id={item.id} name={i} value={item.todo} onChange={onEdit(item.id)} className=\"todoTextInput\"/> :\n                                <input type='text' id={item.id} name={i} value={item.todo} readOnly className=\"todoTextInput\" style={{outline: \"none\"}}/>\n                            }   \n                        </div>\n\n                        {/* list dropdown */}\n                        <select name=\"listDropdown\"className=\"listDropdown\" onChange={handlePriorityChange(item.id)}>\n                            <option aria-label=\"high priority\" value=\"1\" selected={item.priority === \"1\"}>High</option>\n                            <option aria-label=\"medium priority\" value=\"2\" selected={item.priority === \"2\"}>Medium</option>\n                            <option aria-label=\"low priority\" value=\"3\" selected={item.priority === \"3\"}>Low</option>\n                        </select>\n                        </div>\n\n                    </div>\n                </div>\n            ))}\n\n            <div className=\"footer\">\n                {filteredData.filter(i => i.completed).length > 0 && \n                    <div>\n                    {props.onShowAll}\n                    <button aria-label=\"Delete completed items\" className=\"button deleteCompleted\" onClick={deleteAllCompleted}>Delete Completed</button> \n                    </div>\n                }\n                <div>\n                    <button aria-label=\"Delete entire list\" className=\"button deleteCompleted\" onClick={deleteList}>Delete List</button> \n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from \"react\";\n\nexport default function TabTitle(props) {\n    const [tabTitle, setTabTitle] = useState(props.title);\n  \n    let className = 'tab-list-item';\n\n    if (props.title === props.selectedTab) {\n      className += ' tab-list-active';\n    }\n\n    function updateSelectedTab() {\n      props.onSelectTab(props.title);\n    }\n\n    function editTabTitle(index) {\n      return (e) => {\n          setTabTitle( prevState => ({...prevState, [e.target.name] : e.target.value}))\n          props.onEditTabTitle(e.target.value, index);\n      }\n  }\n\n    return (\n      <div className=\"tabs\">\n        <button onClick={updateSelectedTab} className=\"invisibleButton\">\n          <input type='text' id={props.key} name={props.key} value={props.title} onChange={editTabTitle(props.index)} className={className} disabled={props.mode !== \"EDIT\"}/>\n        </button>\n      </div>\n    )\n}\n","import React from \"react\";\nimport TabTitle from \"./TabTitle\";\n\nexport default function Tabs(props) {\n  const tabs = [];\n  for (let i = 0; i < props.data.length; i++) {\n    tabs.push({\n      list: props.data[i].list,\n      id: props.data[i].id,\n    });\n  }\n  const uniqueTabs = [...new Set(tabs)];\n  return (\n    <div>\n      <div className=\"tab-list\">\n        {/* TABS */}\n        {uniqueTabs.map((tab, i) => {\n            return (\n              <div>\n                <TabTitle\n                  onEditTabTitle={(tabTitle, index) => props.onEditTabTitle(tabTitle, index)}\n                  onSelectTab={selectedTab => props.onSelectTab(selectedTab)}\n                  key={i} \n                  index={tab.id}\n                  title={tab.list}\n                  selectedTab={props.currTab}\n                  mode={props.mode}\n                />\n              </div>\n            )}\n          )}\n        {/* PLUS BUTTON - Add a new tab/list */}\n        <button aria-label=\"Add a new tab\" className=\"plus-tab\" onClick={props.onNewTab}>+</button>\n      </div>\n    </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport List from './List';\nimport Tabs from './components/Tabs';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport './styles.css';\nimport {filterType, modeType} from './Constants';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATi5uqr6dkf4iTvqfPHndGwtHXz0O6O-s\",\n  authDomain: \"lab-90286.firebaseapp.com\",\n  databaseURL: \"https://lab-90286-default-rtdb.firebaseio.com\",\n  projectId: \"lab-90286\",\n  storageBucket: \"lab-90286.appspot.com\",\n  messagingSenderId: \"782831139249\",\n  appId: \"1:782831139249:web:2d846e81abb155eeece590\",\n  measurementId: \"G-YTZ7W2BRD9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  const collection = db.collection('todo_list');\n  const [query, setQuery] = useState(collection);\n\n  const [todoListData, setTodoListData] = useState([]);\n  const [lastId, setLastId] = useState(\"\");\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n\n  const [value, error, loading] = useCollection(collection);\n  const [currList, setCurrList] = useState(\"\");\n\n  useEffect(() => {\n    let data = [];\n    if (value) {\n      data = value.docs.map((doc) => {\n            return {...doc.data()}});\n      setTodoListData(data);\n      if (currList === \"\") {\n        setCurrList(data[0].list);\n      }\n    }\n  }, [currList, value]);\n\n  function plusClicked() {\n    // Adds an empty Todo\n    const newId = generateUniqueID();\n    let currDate = firebase.firestore.Timestamp.now();\n    collection.doc(newId).set({ id: newId, todo: \"\", completed: false, priority: 2, creationdate: currDate, list: currList});\n    setLastId(newId);\n    setMode(modeType.add);\n  }\n\n  function newList() {\n    // Creates a new list called \"List<some combination of unique ID numbers>\" with a \"First Todo\"\n    const newId = generateUniqueID();\n    let currDate = firebase.firestore.Timestamp.now();\n    collection.doc(newId).set({ id: newId, todo: \"First Todo\", completed: false, priority: 2, creationdate: currDate, list: \"List\" + newId.slice(20, 25)});\n    setLastId(newId);\n    setMode(modeType.add);\n  }\n  \n  function removeTodo(id) {\n    collection.doc(id).delete();\n  }\n\n  function editTodo(newTodo, id) {\n    // edits an existing Todo\n    let todoObj = {'id': id, 'todo': newTodo}\n    collection.doc(id).update(todoObj);\n  }\n\n  function setCompleted(isCompleted, id) {\n    // changes the state of completed\n    let todoObj = {'id': id, 'completed': isCompleted}\n    collection.doc(id).update(todoObj);\n  }\n\n  function setPriorityLevel(priorityLevel, id) {\n    // changes the priority level\n    let todoObj = {'id': id, 'priority': priorityLevel}\n    collection.doc(id).update(todoObj);\n  }\n\n  function editTabTitle(tabTitle, id) {\n      // changes the list title\n      let todoObj = {'id': id, 'list': tabTitle}\n      collection.doc(id).update(todoObj);\n      setCurrList(tabTitle);\n  }\n\n  function doneClicked() {\n    if (todoListData.length > 0 && todoListData[todoListData.length-1].todo === \"\") {removeTodo(lastId)}\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    setMode(modeType.edit);\n  }\n\n  function handleSortChange(e) {\n    const sortType = e.target.value;\n    const sortOrder = sortType === \"creationdate\" ? 'desc' : 'asc';\n    const sortQuery = collection.orderBy(sortType, sortOrder);\n    setQuery(sortQuery);\n  }\n\n  function showHideButtons() {\n    return (\n        <>\n        {filter === filterType.hideCompleted ?\n        <button aria-label=\"Show all items\" className=\"button showCompleted\" onClick={() => setFilterType(filterType.showAll)}>Show All</button> :\n        <button aria-label=\"Hide completed items\" className=\"button showCompleted\" onClick={() => setFilterType(filterType.hideCompleted)}>Hide Completed</button>}\n        </>\n    )\n  }\n\n  return (\n    <div>\n    {query.loading && <h1>Loading</h1>}\n    {todoListData && <>\n      <div className=\"buttons\">\n        <div className=\"mainDropdownContainer\">\n            <select name=\"dropdown\" className=\"mainDropdown\" onChange={handleSortChange} disabled={mode === modeType.edit}>\n              <option aria-label=\"Sort by priority\" value=\"priority\">Sort by priority</option>\n              <option aria-label=\"Sort by name\" value=\"todo\">Sort by name</option>\n              <option aria-label=\"Sort by creation date\" value=\"creationdate\">Sort by creation date</option>\n            </select>\n        </div>\n\n        <div className=\"controlButtonContainer\">\n          {(mode === modeType.add || mode === modeType.edit) ? \n                (<button aria-label=\"Finish editing\" className=\"button doneButton\" onClick={doneClicked}>Done</button>)\n              :\n              (\n                <>\n                <button aria-label=\"Edit\" className=\"button editButton\" onClick={editClicked}>Edit</button>\n                <button aria-label=\"Add a new todo\" className=\"button plusButton\" onClick={plusClicked}>+</button> \n                </>\n              )\n          }\n        </div>\n      </div>\n\n      <div className=\"body-container\">\n          <div className=\"title\">\n              <h1 className=\"underline\">To-do list</h1>\n          </div>\n      </div>\n\n      <Tabs\n        data={todoListData}\n        currTab={currList}\n        onNewTab={newList}\n        onSelectTab={selectedList => setCurrList(selectedList)}\n        onEditTabTitle={(tabTitle, index) => editTabTitle(tabTitle, index)}\n        mode={mode}\n      />\n\n      <List\n        data={todoListData}\n        currList={currList}\n        filterType={filter}\n        onSetData={(isComplete, index) => {\n          setCompleted(isComplete, index)\n        }}\n        onEditData={(newTodo, index) => {\n          editTodo(newTodo, index);\n        }}\n        onChangePriority={(newTodo, index) => {\n          setPriorityLevel(newTodo, index);\n        }}\n        onShowAll={showHideButtons()}\n        onRemoveTodo={(id) => {\n          removeTodo(id)\n        }}\n        mode={mode}\n        lastId={lastId}\n      />\n    </>\n          }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}