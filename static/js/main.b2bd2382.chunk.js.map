{"version":3,"sources":["Constants.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["filterType","modeType","List","props","filteredData","data","filter","item","completed","useState","setTodo","setChecked","setPriorityLevel","onEdit","index","e","prevState","target","name","value","onEditData","handlePriorityChange","onChangePriority","map","i","className","type","id","disabled","mode","checked","onChange","isChecked","onSetData","class","lastId","todo","readOnly","selected","priority","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","collection","query","setQuery","todoListData","setTodoListData","setLastId","setFilterType","setMode","atLeastOneSelected","setAtLeastOneSelected","useCollection","removeTodo","doc","delete","useEffect","docs","loading","sortType","sortOrder","sortQuery","orderBy","onClick","length","newId","generateUniqueID","currDate","Timestamp","now","set","creationdate","isComplete","isCompleted","todoObj","update","setCompleted","newTodo","editTodo","priorityLevel","personId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2bd2382.chunk.js","sourcesContent":["export const filterType = {\n    showAll: \"SHOW_ALL\",\n    hideCompleted: \"HIDE_COMPLETED\",\n}\n\nexport const modeType = {\n    add: \"ADD\",\n    edit: \"EDIT\",\n    base: \"BASE\",\n}\n\nexport const priorityType = {\n    high: 3,\n    med: 2,\n    low: 1,\n}","import React, { useState } from 'react';\nimport {filterType} from './Constants';\n\nexport default function List(props) {\n    const filteredData = props.filterType === filterType.hideCompleted ? props.data.filter(item => !item.completed) : props.data\n    const [todo, setTodo] = useState({});\n    const [checked, setChecked] = useState({});\n    const [priorityLevel, setPriorityLevel] = useState({});\n    \n    function handleChange(index) {\n        return (e) => {\n            let isChecked = e.target.checked;\n            setChecked( prevState => ({...prevState, [e.target.name] : e.target.checked}))\n            props.onSetData(isChecked, index);\n        }\n    }\n\n    function onEdit(index) {\n        return (e) => {\n            setTodo( prevState => ({...prevState, [e.target.name] : e.target.value}))\n            props.onEditData(e.target.value, index);\n        }\n    }\n\n    function handlePriorityChange(index) {\n        return (e) => {\n            setPriorityLevel( prevState => ({...prevState, [e.target.name] : e.target.value}))\n            props.onChangePriority(e.target.value, index);\n        }\n    }\n\n    return(\n        <div>\n            {filteredData.map((item, i) => (\n                <div className=\"container\">\n                    <div className = \"input\" key={i}>\n                    <input type=\"checkbox\" id={item.id} name={i} disabled={props.mode === \"EDIT\"} checked={item.completed} onChange={handleChange(item.id)} class='regular-checkbox'/>\n                        {props.mode === \"EDIT\" ? \n                            <input type='text' id={item.id} name={i} value={item.todo} onChange={onEdit(item.id)} className=\"todoTextInput\"/> :\n                        (props.mode === \"ADD\" && item.id === props.lastId) ?\n                            <input type='text' id={item.id} name={i} value={item.todo} onChange={onEdit(item.id)} className=\"todoTextInput\"/> :\n                            <input type='text' id={item.id} name={i} value={item.todo} readOnly className=\"todoTextInput\"/>\n                        }   \n                    <select name=\"listDropdown\"className=\"listDropdown\" onChange={handlePriorityChange(item.id)}>\n                        <option value=\"1\" selected={item.priority === \"1\"}>High</option>\n                        <option value=\"2\" selected={item.priority === \"2\"}>Medium</option>\n                        <option value=\"3\" selected={item.priority === \"3\"}>Low</option>\n                    </select>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport List from './List';\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport './styles.css';\nimport {filterType, modeType} from './Constants';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATi5uqr6dkf4iTvqfPHndGwtHXz0O6O-s\",\n  authDomain: \"lab-90286.firebaseapp.com\",\n  databaseURL: \"https://lab-90286-default-rtdb.firebaseio.com\",\n  projectId: \"lab-90286\",\n  storageBucket: \"lab-90286.appspot.com\",\n  messagingSenderId: \"782831139249\",\n  appId: \"1:782831139249:web:2d846e81abb155eeece590\",\n  measurementId: \"G-YTZ7W2BRD9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  const collection = db.collection('natasha-bettina-124');\n\n  const [query, setQuery] = useState(collection);\n\n  const [todoListData, setTodoListData] = useState([]);\n  const [lastId, setLastId] = useState(\"\");\n  const [filter, setFilterType] = useState(filterType.showAll);\n  const [mode, setMode] = useState(modeType.base);\n  const [atLeastOneSelected, setAtLeastOneSelected ] = useState(false);\n\n  const [value, error, loading] = useCollection(query);\n\n  useEffect(() => {\n    let data = [];\n    if (value) {\n      data = value.docs.map((doc) => {\n           return {...doc.data()}});\n      setTodoListData(data);\n    }\n  }, [value])\n\n  function plusClicked() {\n    // Adds an empty Todo\n    const newId = generateUniqueID();\n    let currDate = firebase.firestore.Timestamp.now();\n    collection.doc(newId).set({ id: newId, todo: \"\", completed: false, priority: 2, creationdate: currDate});\n    setLastId(newId);\n    setMode(modeType.add);\n  }\n  \n  function removeTodo(id) {\n    collection.doc(id).delete();\n  }\n\n  function editTodo(newTodo, id) {\n    // edits an existing Todo\n    let todoObj = {'id': id, 'todo': newTodo}\n    collection.doc(id).update(todoObj);\n  }\n\n  function setCompleted(isCompleted, id) {\n    // changes the state of completed\n    let todoObj = {'id': id, 'completed': isCompleted}\n    collection.doc(id).update(todoObj);\n  }\n\n  function setPriorityLevel(priorityLevel, id) {\n    // changes the priority level\n    let todoObj = {'id': id, 'priority': priorityLevel}\n    collection.doc(id).update(todoObj);\n  }\n\n\n  function doneClicked() {\n    if (todoListData.length > 0 && todoListData[todoListData.length-1].todo === \"\") {removeTodo(lastId)}\n    setMode(modeType.base);\n  }\n\n  function editClicked() {\n    todoListData.map((item, i) => {\n      if (item.completed) {setAtLeastOneSelected(true)}\n    })\n    setMode(modeType.edit);\n  }\n\n  function deleteSelected(personId) {\n    todoListData.map((item, i) => {\n      if (item.completed) {removeTodo(item.id)}\n    })\n  }\n\n  function handleSortChange(e) {\n    const sortType = e.target.value;\n    const sortOrder = sortType === \"creationdate\" ? 'desc' : 'asc';\n    const sortQuery = collection.orderBy(sortType, sortOrder);\n    setQuery(sortQuery);\n  }\n\n  return (\n    <div>\n    {query.loading && <h1>Loading</h1>}\n    {todoListData && <>\n      <div className=\"buttons\">\n        <div>\n            <select name=\"dropdown\" className=\"mainDropdown\" onChange={handleSortChange}>\n              <option value=\"priority\">Priority</option>\n              <option value=\"todo\">Name</option>\n              <option value=\"creationdate\">Creation Date</option>\n            </select>\n        </div>\n\n        <div>\n          {(mode === modeType.add || mode === modeType.edit) ? \n                (<button className=\"button doneButton\" onClick={doneClicked}>Done</button>)\n              :\n              (\n                <>\n                <button className=\"button editButton\" onClick={editClicked}>Edit</button>\n                <button className=\"button plusButton\" onClick={plusClicked}>+</button> \n                </>\n              )\n          }\n      </div>\n      </div>\n      <div className=\"body-container\">\n          <div className=\"title\">\n              <h1 className=\"underline\">To-do list</h1>\n          </div>\n      </div>\n      <List\n        data={todoListData} \n        filterType={filter}\n        onSetData={(isComplete, index) => {\n          setCompleted(isComplete, index)\n        }}\n        onEditData={(newTodo, index) => {\n          editTodo(newTodo, index);\n        }}\n        onChangePriority={(newTodo, index) => {\n          setPriorityLevel(newTodo, index);\n        }}\n        mode={mode}\n        lastId={lastId}\n      />\n\n      <div className=\"footer\">\n          {filter === filterType.hideCompleted && atLeastOneSelected ? \n            <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.showAll)}>Show All</button> :\n            <button className=\"button showCompleted\" onClick={() => setFilterType(filterType.hideCompleted)}>Hide Completed</button>\n          }\n          <button className=\"button deleteCompleted\" onClick={deleteSelected}>Delete Completed</button> \n      </div>\n    </>\n          }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}